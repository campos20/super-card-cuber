{"version":3,"sources":["functions/wcaUtils.js","functions/timeUtils.js","components/Card.jsx","components/Input.jsx","components/Interface.jsx","App.js","serviceWorker.js","index.js"],"names":["wcaEvents","id","name","spec","getName","event","item","isWcaEvent","isValidWcaId","wcaId","test","timeConverter","result","mills","time","Number","sec","Math","floor","min","hour","out","number","zeroes","length","i","zfill","mills2time","Card","props","medals","records","findResult","type","competitor","getCompetitorInfo","competition_count","indexOf","total","personal_records","someStats","isLoaded","toShow","competitorInfo","this","className","person","src","avatar","url","alt","map","stat","key","Component","Input","handleCompetitorChange","target","value","toUpperCase","setState","searchCompetitor","toogleSelectedEvent","ev","source","getAttribute","split","toogleToShow","isToShow","state","onChange","maxLength","data-toggle","data-target","aria-expanded","aria-controls","onClick","Interface","forEach","filter","x","push","fetchCompetitor","loaded","baseApiUrl","personsEndpoint","fetch","then","res","json","error","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ec8b0c2.chunk.js","sourcesContent":["export const wcaEvents = [\n  {\n    id: \"333\",\n    name: \"3x3x3 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"222\",\n    name: \"2x2x2 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"444\",\n    name: \"4x4x4 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"555\",\n    name: \"5x5x5 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"666\",\n    name: \"6x6x6 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"777\",\n    name: \"7x7x7 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333bf\",\n    name: \"3x3x3 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333fm\",\n    name: \"3x3x3 Fewest Moves\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333oh\",\n    name: \"3x3x3 One-Handed\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333ft\",\n    name: \"3x3x3 With Feet\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"clock\",\n    name: \"Clock\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"minx\",\n    name: \"Megaminx\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"pyram\",\n    name: \"Pyraminx\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"skewb\",\n    name: \"Skewb\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"sq1\",\n    name: \"Square-1\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"444bf\",\n    name: \"4x4x4 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"555bf\",\n    name: \"5x5x5 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333mbf\",\n    name: \"3x3x3 Multi-Blind\",\n    spec: [\"single\"]\n  }\n];\n\nexport function getName(event) {\n  for (var item in wcaEvents) {\n    if (wcaEvents[item].id === event) {\n      return wcaEvents[item].name;\n    }\n  }\n}\n\nexport function isWcaEvent(event) {\n  for (var item in wcaEvents) {\n    if (wcaEvents[item].id === event) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isValidWcaId(wcaId) {\n  return /[0-9]{4}[A-Z]{4}[0-9]{2}/.test(wcaId);\n}\n\nexport default { wcaEvents, isWcaEvent, getName, isValidWcaId };\n","let zfill = function(number, zeroes) {\n  let length = (\"\" + number).length;\n  let result = \"\";\n  for (var i = 0; i < zeroes - length; i++) {\n    result += \"0\";\n  }\n  return result + number;\n};\n\nconst mills2time = function(mills) {\n  // We assign \"-\" for empty values\n  if (mills === \"-\") {\n    return mills;\n  }\n\n  let time = Number(mills);\n  if (time === -1) {\n    return \"DNF\";\n  }\n\n  let sec = Math.floor(time / 100);\n  time %= 100;\n\n  let min = Math.floor(sec / 60);\n  sec %= 60;\n\n  let hour = Math.floor(min / 60);\n  min %= 60;\n\n  let out = sec + \".\" + zfill(time, 2);\n\n  if (min > 0) {\n    if (sec < 10) {\n      out = min + \":0\" + out;\n    } else {\n      out = min + \":\" + out;\n    }\n  }\n\n  if (hour > 0) {\n    if (min < 10) {\n      out = hour + \":0\" + out;\n    } else {\n      out = hour + \":\" + out;\n    }\n  }\n\n  return out;\n};\n\nconst timeConverter = function(result, event) {\n  if (event === \"333fm\") {\n    return result;\n  }\n\n  // TODO fix this\n  if (event === \"333mbf\") {\n    return result;\n  }\n\n  return mills2time(result);\n};\n\nexport default timeConverter;\n","import React, { Component } from \"react\";\nimport \"./Card.css\";\nimport { isWcaEvent, getName } from \"../functions/wcaUtils\";\nimport timeConverter from \"../functions/timeUtils\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCompetitorInfo = props.getCompetitorInfo;\n    this.isLoaded = props.isLoaded;\n\n    this.toShow = props.toShow;\n  }\n\n  // Map properties to show in the json in depth\n  // This is a helper function that says: hey, you are looking for totalRecods? I'll show you where it is.\n  medals = [\"gold\", \"silver\", \"bronze\"];\n  records = [\"world\", \"continental\", \"national\"];\n  findResult = (item, type, spec) => {\n    let competitor = this.getCompetitorInfo();\n\n    if (item === \"competitions\") return competitor.competition_count;\n\n    if (this.medals.indexOf(item) >= 0) return competitor.medals.item;\n    if (item === \"totalMedals\") return competitor.medals.total;\n\n    if (this.records.indexOf(item) >= 0) return competitor.records.item;\n    if (item === \"totalRecords\") return competitor.records.total;\n\n    if (isWcaEvent(item)) {\n      if (\n        !competitor.personal_records[item] ||\n        !competitor.personal_records[item][type] ||\n        !competitor.personal_records[item][type][spec]\n      ) {\n        return \"-\";\n      }\n      return competitor.personal_records[item][type][spec];\n    }\n\n    return \"Error.\";\n  };\n\n  // Some stats\n  someStats = [\n    { id: \"competitions\", name: \"Competitions\" },\n    { id: \"totalMedals\", name: \"Total Medals\" },\n    { id: \"totalRecords\", name: \"Total Records\" }\n  ];\n\n  render() {\n    let competitorInfo = this.props.competitorInfo;\n    return this.isLoaded() ? (\n      <div className=\"cardBase\">\n        <h4>{competitorInfo.person.name}</h4>\n\n        <div>\n          {/*this.state.competitor.person.avatar.url*/}\n          <img\n            className=\"avatar\"\n            src={competitorInfo.person.avatar.url}\n            alt=\"Competitor avatar.\"\n          ></img>\n        </div>\n\n        <div>\n          <table className=\"table table-bordered table-striped table-sm\">\n            <tbody>\n              {this.someStats.map(stat => (\n                <tr key={stat.id}>\n                  <td>{stat.name}</td>\n                  <td>{this.findResult(stat.id)}</td>\n                </tr>\n              ))}\n\n              {this.props.toShow.map(event => (\n                <tr key={event.id + \"-\" + event.type}>\n                  <td className=\"capitalize\">\n                    {getName(event.id) + \" \" + event.type}\n                  </td>\n                  <td>\n                    {timeConverter(\n                      this.findResult(event.id, event.type, \"best\"),\n                      event.id\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    ) : (\n      <span>Select a competitor.</span>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./Input.css\";\nimport { wcaEvents } from \"../functions/wcaUtils\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isToShow = props.isToShow;\n    this.toogleToShow = props.toogleToShow;\n\n    let state = { wcaId: \"\" };\n    this.state = state;\n\n    this.searchCompetitor = props.searchCompetitor;\n  }\n\n  handleCompetitorChange = event => {\n    let wcaId = event.target.value.toUpperCase();\n    this.setState({ wcaId: wcaId });\n    this.searchCompetitor(wcaId);\n  };\n\n  // WCA json is fetched with\n  // spec\n  // best -> PR\n  // NR, CR, WR for rankings\n  toogleSelectedEvent = ev => {\n    // Vanilla javascript to help in getting the value assigned\n    // For value, we assign like: 333-single, 333-average...\n    let source = ev.target.getAttribute(\"value\").split(\"-\");\n    let event = source[0];\n    let spec = source[1];\n\n    this.toogleToShow(event, spec);\n  };\n\n  render() {\n    return (\n      <div id=\"input-base\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">Competitor</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleCompetitorChange}\n              maxLength=\"10\"\n              id=\"wca-id-input\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 div-btn-control\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#collapseTable\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTable\"\n            >\n              Select events\n            </button>\n          </div>\n        </div>\n        <div className=\"collapse\" id=\"collapseTable\">\n          <table className=\"table\">\n            <tbody>\n              {wcaEvents.map(event => (\n                <tr key={event.id}>\n                  <th>{event.id}</th>\n                  {event.spec.map(spec => (\n                    <td\n                      key={event.id + spec}\n                      value={event.id + \"-\" + spec}\n                      onClick={this.toogleSelectedEvent}\n                      className={\n                        this.isToShow(event.id, spec)\n                          ? \"table-dark event-spec\"\n                          : \"event-spec\"\n                      }\n                    >\n                      {spec}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport \"./Interface.css\";\nimport { isValidWcaId } from \"../functions/wcaUtils\";\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n\n    // Default events to show\n    let toShow = [\n      { id: \"333\", type: \"single\" },\n      { id: \"333\", type: \"average\" }\n    ];\n\n    let state = {\n      wcaId: \"\",\n      competitorInfo: {},\n      loaded: false,\n      toShow: toShow\n    };\n    this.state = state;\n  }\n\n  isToShow = (event, type) => {\n    let result = false;\n    this.state.toShow.forEach(item => {\n      if (item.id === event && item.type === type) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  toogleToShow = (event, type) => {\n    let toShow = this.state.toShow;\n    let state = this.state;\n\n    if (this.isToShow(event, type)) {\n      toShow = toShow.filter(x => x.id !== event || x.type !== type);\n    } else {\n      toShow.push({ id: event, type: type });\n    }\n\n    state.toShow = toShow;\n    this.setState(state);\n  };\n\n  searchCompetitor = wcaId => {\n    if (isValidWcaId(wcaId)) {\n      this.fetchCompetitor(wcaId);\n    }\n  };\n\n  getCompetitorInfo = () => {\n    return this.state.competitorInfo;\n  };\n\n  isLoaded = () => {\n    return this.state.loaded;\n  };\n\n  // Search competitor info in the api\n  baseApiUrl = \"http://localhost:3000/\";\n  baseApiUrl = \"https://www.worldcubeassociation.org/\";\n  personsEndpoint = \"api/v0/persons/\";\n  fetchCompetitor = function(wcaId) {\n    let url = this.baseApiUrl + this.personsEndpoint + wcaId;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        result => {\n          let state = this.state;\n          state.competitorInfo = result;\n          state.loaded = true;\n          this.setState(state);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotrom\">\n          <h1 id=\"main-title\">Super Card Cuber</h1>\n        </div>\n        <br />\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <Input\n                searchCompetitor={this.searchCompetitor}\n                isToShow={this.isToShow}\n                toogleToShow={this.toogleToShow}\n              />\n            </div>\n            <div className=\"col-8\">\n              <Card\n                getCompetitorInfo={this.getCompetitorInfo}\n                isLoaded={this.isLoaded}\n                competitorInfo={this.state.competitorInfo}\n                toShow={this.state.toShow}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Interface;\n","import React from \"react\";\nimport \"./App.css\";\nimport Interface from \"./components/Interface\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Interface></Interface>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}