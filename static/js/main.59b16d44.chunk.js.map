{"version":3,"sources":["functions/wcaUtils.js","functions/timeUtils.js","components/Card.jsx","components/Input.jsx","components/Interface.jsx","App.js","serviceWorker.js","index.js"],"names":["wcaEvents","id","name","spec","getName","event","item","isValidWcaId","wcaId","test","zfill","number","zeroes","length","result","i","timeConverter","wcaEvent","type","DD","Number","substring","TTTTT","MM","solved","hour","Math","floor","min","sec","sec2time","mills","time","out","mills2time","Card","props","medals","records","findResult","competitor","getCompetitorInfo","competition_count","indexOf","total","personal_records","isLoaded","toShow","getSpecName","competitorInfo","this","className","person","src","avatar","url","alt","generalItems","filter","stat","show","map","key","Component","Input","handleCompetitorChange","target","value","toUpperCase","setState","searchCompetitor","toogleSelectedEvent","ev","source","getAttribute","split","toogleToShow","toogleGeneralItem","toogleShowGeneralItem","isToShow","state","types","specs","onChange","maxLength","placeholder","data-toggle","data-target","aria-expanded","aria-controls","onClick","colSpan","eventSpec","Fragment","Interface","specId","x","forEach","push","fetchCompetitor","loaded","baseApiUrl","personsEndpoint","fetch","then","res","json","error","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59b16d44.chunk.js","sourcesContent":["export const wcaEvents = [\n  {\n    id: \"333\",\n    name: \"3x3x3 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"222\",\n    name: \"2x2x2 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"444\",\n    name: \"4x4x4 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"555\",\n    name: \"5x5x5 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"666\",\n    name: \"6x6x6 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"777\",\n    name: \"7x7x7 Cube\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333bf\",\n    name: \"3x3x3 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333fm\",\n    name: \"3x3x3 Fewest Moves\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333oh\",\n    name: \"3x3x3 One-Handed\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333ft\",\n    name: \"3x3x3 With Feet\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"clock\",\n    name: \"Clock\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"minx\",\n    name: \"Megaminx\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"pyram\",\n    name: \"Pyraminx\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"skewb\",\n    name: \"Skewb\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"sq1\",\n    name: \"Square-1\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"444bf\",\n    name: \"4x4x4 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"555bf\",\n    name: \"5x5x5 Blindfolded\",\n    spec: [\"single\", \"average\"]\n  },\n  {\n    id: \"333mbf\",\n    name: \"3x3x3 Multi-Blind\",\n    spec: [\"single\"]\n  }\n];\n\nexport function getName(event) {\n  for (var item in wcaEvents) {\n    if (wcaEvents[item].id === event) {\n      return wcaEvents[item].name;\n    }\n  }\n}\n\nexport function isWcaEvent(event) {\n  for (var item in wcaEvents) {\n    if (wcaEvents[item].id === event) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isValidWcaId(wcaId) {\n  return /[0-9]{4}[A-Z]{4}[0-9]{2}/.test(wcaId);\n}\n\nexport default { wcaEvents, isWcaEvent, getName, isValidWcaId };\n","let zfill = function(number, zeroes) {\n  let length = (\"\" + number).length;\n  let result = \"\";\n  for (var i = 0; i < zeroes - length; i++) {\n    result += \"0\";\n  }\n  return result + number;\n};\n\nconst mills2time = function(mills) {\n  // We assign \"-\" for empty values\n  if (mills === \"-\") {\n    return mills;\n  }\n\n  // Just in case\n  let time = Number(mills);\n  if (time === -1) {\n    return \"DNF\";\n  }\n\n  let sec = Math.floor(time / 100);\n  time %= 100;\n\n  let min = Math.floor(sec / 60);\n  sec %= 60;\n\n  let hour = Math.floor(min / 60);\n  min %= 60;\n\n  let out = sec + \".\" + zfill(time, 2);\n\n  if (min > 0) {\n    if (sec < 10) {\n      out = min + \":0\" + out;\n    } else {\n      out = min + \":\" + out;\n    }\n  }\n\n  if (hour > 0) {\n    if (min < 10) {\n      out = hour + \":0\" + out;\n    } else {\n      out = hour + \":\" + out;\n    }\n  }\n\n  return out;\n};\n\n// Currently, for MBLD only\nconst sec2time = function(TTTTT) {\n  if (TTTTT === 99999) {\n    return \"Unknown\";\n  }\n  let hour = Math.floor(TTTTT / 3600);\n  TTTTT -= hour * 3600;\n\n  let min = Math.floor(TTTTT / 60);\n  TTTTT -= min * 60;\n\n  let sec = Math.floor(TTTTT);\n\n  if (hour > 0) {\n    return hour + \":\" + zfill(min, 2) + zfill(sec, 2);\n  }\n\n  return min + \":\" + zfill(sec, 2);\n};\n\n/**\n *\n * @param {*} result\n * @param {*} wcaEvent\n * @param {*} type is either single or average\n * @param {*} spec is best (if PR), national_rank, continent_rank, world_rank\n */\nconst timeConverter = function(result, wcaEvent, type) {\n  if (wcaEvent === \"333fm\" && type === \"single\") {\n    return result;\n  }\n\n  if (wcaEvent === \"333mbf\" && type === \"single\") {\n    // https://www.worldcubeassociation.org/results/misc/export.html\n\n    result += \"\";\n\n    let DD = Number(result.substring(0, 2));\n    let TTTTT = Number(result.substring(2, 2 + 5));\n    let MM = Number(result.substring(7, 7 + 2));\n\n    let difference = 99 - DD;\n    let timeInSeconds = sec2time(TTTTT);\n    let missed = MM;\n    let solved = difference + missed;\n    let attempted = solved + missed;\n    return solved + \"/\" + attempted + \" [\" + timeInSeconds + \"]\";\n  }\n\n  return mills2time(result);\n};\n\nexport default timeConverter;\n","import React, { Component } from \"react\";\nimport \"./Card.css\";\nimport { getName } from \"../functions/wcaUtils\";\nimport timeConverter from \"../functions/timeUtils\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCompetitorInfo = props.getCompetitorInfo;\n    this.isLoaded = props.isLoaded;\n\n    this.toShow = props.toShow;\n\n    this.getSpecName = props.getSpecName;\n  }\n\n  // Map properties to show in the json in depth\n  // This is a helper function that says: hey, you are looking for totalRecods? I'll show you where it is.\n  medals = [\"gold\", \"silver\", \"bronze\"];\n  records = [\"world\", \"continental\", \"national\"];\n  findResult = (item, type, spec) => {\n    let competitor = this.getCompetitorInfo();\n\n    if (item === \"competitions\") return competitor.competition_count;\n\n    if (this.medals.indexOf(item) >= 0) return competitor.medals.item;\n    if (item === \"totalMedals\") return competitor.medals.total;\n\n    if (this.records.indexOf(item) >= 0) return competitor.records.item;\n    if (item === \"totalRecords\") return competitor.records.total;\n\n    // This will render eigher PR single or average\n    if (\"best\" === spec) {\n      if (\n        !competitor.personal_records[item] ||\n        !competitor.personal_records[item][type] ||\n        !competitor.personal_records[item][type][spec]\n      ) {\n        return \"-\";\n      }\n\n      let wcaEvent = item;\n\n      return timeConverter(\n        competitor.personal_records[wcaEvent][type][spec],\n        wcaEvent,\n        type\n      );\n    }\n\n    // NR, CR or WR - rank.\n    return competitor.personal_records[item][type][spec];\n  };\n\n  render() {\n    let competitorInfo = this.props.competitorInfo;\n    return this.isLoaded() ? (\n      <div id=\"card-base\" className=\"container\">\n        <div id=\"card\" className=\"card\">\n          <h4>{competitorInfo.person.name}</h4>\n\n          <div>\n            {/*this.state.competitor.person.avatar.url*/}\n            <img\n              className=\"avatar\"\n              src={competitorInfo.person.avatar.url}\n              alt=\"Competitor avatar.\"\n            ></img>\n          </div>\n\n          <div id=\"div-table-card\">\n            <table className=\"table table-bordered table-striped table-sm\">\n              <tbody>\n                {this.props.generalItems\n                  .filter(stat => stat.show)\n                  .map(stat => (\n                    <tr key={stat.id}>\n                      <td>{stat.name}</td>\n                      <td>{this.findResult(stat.id)}</td>\n                    </tr>\n                  ))}\n\n                {this.props.toShow.map(event => (\n                  <tr key={event.id + \"-\" + event.type + \"-\" + event.spec}>\n                    <td className=\"capitalize\">\n                      {getName(event.id) +\n                        \" \" +\n                        event.type +\n                        \" \" +\n                        this.getSpecName(event.spec)}\n                    </td>\n                    <td>{this.findResult(event.id, event.type, event.spec)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <span></span>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./Input.css\";\nimport { wcaEvents, getName } from \"../functions/wcaUtils\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isToShow = props.isToShow;\n    this.toogleToShow = props.toogleToShow;\n\n    this.toogleShowGeneralItem = props.toogleShowGeneralItem;\n\n    let state = { wcaId: \"\" };\n    this.state = state;\n\n    this.searchCompetitor = props.searchCompetitor;\n\n    this.types = props.types;\n    this.specs = props.specs;\n  }\n\n  handleCompetitorChange = event => {\n    let wcaId = event.target.value.toUpperCase();\n    this.setState({ wcaId: wcaId });\n    this.searchCompetitor(wcaId);\n  };\n\n  // WCA json is fetched with\n  // spec\n  // best -> PR\n  // NR, CR, WR for rankings\n  toogleSelectedEvent = ev => {\n    // Vanilla javascript to help in getting the value assigned\n    // For value, we assign like: 333-single, 333-average...\n    let source = ev.target.getAttribute(\"id\").split(\"-\");\n    let wcaEvent = source[0];\n    let type = source[1];\n    let spec = source[2];\n\n    this.toogleToShow(wcaEvent, type, spec);\n  };\n\n  toogleGeneralItem = ev => {\n    let source = ev.target.getAttribute(\"value\");\n\n    this.toogleShowGeneralItem(source);\n  };\n\n  render() {\n    return (\n      <div id=\"input-base\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleCompetitorChange}\n              maxLength=\"10\"\n              id=\"wca-id-input\"\n              placeholder=\"Select a Competitor\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div>\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#collapse-items\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapse-items\"\n              >\n                General items\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#collapse-events\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapse-events\"\n              >\n                Events\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 align-items-center\">\n            <div className=\"collapse\" id=\"collapse-items\">\n              <table className=\"table table-sm table-hover\">\n                <tbody>\n                  {this.props.generalItems.map(event => (\n                    <tr key={event.id}>\n                      <td\n                        onClick={this.toogleGeneralItem}\n                        value={event.id}\n                        className={\n                          event.show ? \"table-dark capitalize\" : \"capitalize\"\n                        }\n                      >\n                        {event.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"collapse\" id=\"collapse-events\">\n          <table className=\"table table-sm table-hover\">\n            <thead>\n              <tr>\n                <th></th>\n                {this.types.map(type => (\n                  <th\n                    className=\"capitalize\"\n                    colSpan={this.specs.length}\n                    key={type}\n                  >\n                    {type}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {wcaEvents.map(event => (\n                <tr key={event.id}>\n                  <th>{getName(event.id)}</th>\n                  {event.spec.map(eventSpec => (\n                    <React.Fragment key={eventSpec}>\n                      {this.specs.map(spec => (\n                        <td\n                          className={\n                            this.isToShow(event.id, eventSpec, spec.id)\n                              ? \"table-dark capitalize\"\n                              : \"capitalize\"\n                          }\n                          id={event.id + \"-\" + eventSpec + \"-\" + spec.id}\n                          key={event.id + \"-\" + eventSpec + \"-\" + spec.id}\n                          onClick={this.toogleSelectedEvent}\n                        >\n                          {spec.name}\n                        </td>\n                      ))}\n                    </React.Fragment>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport \"./Interface.css\";\nimport { isValidWcaId } from \"../functions/wcaUtils\";\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n\n    this.types = [\"single\", \"average\"];\n\n    //\n    this.specs = [\n      { id: \"best\", name: \"best\" },\n      { id: \"country_rank\", name: \"NR\" },\n      { id: \"continent_rank\", name: \"CR\" },\n      { id: \"world_rank\", name: \"WR\" }\n    ];\n\n    let generalItems = [\n      { id: \"competitions\", name: \"Competitions\", show: true },\n      { id: \"totalMedals\", name: \"Total Medals\", show: true },\n      { id: \"totalRecords\", name: \"Total Records\", show: true }\n    ];\n\n    // Default events to show\n    let toShow = [\n      { id: \"333\", type: \"single\", spec: \"best\" },\n      { id: \"333\", type: \"average\", spec: \"best\" }\n    ];\n\n    let state = {\n      wcaId: \"\",\n      competitorInfo: {},\n      loaded: false,\n      generalItems: generalItems,\n      toShow: toShow\n    };\n    this.state = state;\n  }\n\n  /**\n   * Given the id spec, returns its name.\n   * Example: national_rank => NR\n   */\n  getSpecName = specId => {\n    return this.specs.filter(x => x.id === specId)[0].name;\n  };\n\n  toogleShowGeneralItem = item => {\n    let generalItems = this.state.generalItems;\n    generalItems.forEach(x => {\n      if (x.id === item) {\n        x.show = !x.show;\n      }\n    });\n    let state = this.state;\n    state.generalItems = generalItems;\n    this.setState(state);\n  };\n\n  isToShow = (event, type, spec) => {\n    let result = false;\n    this.state.toShow.forEach(item => {\n      if (item.id === event && item.type === type && item.spec === spec) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  toogleToShow = (wcaEvent, type, spec) => {\n    let toShow = this.state.toShow;\n    let state = this.state;\n\n    // In case the item is set to show, we remove it\n    if (this.isToShow(wcaEvent, type, spec)) {\n      toShow = toShow.filter(\n        x => x.id !== wcaEvent || x.type !== type || x.spec !== spec\n      );\n    } else {\n      toShow.push({ id: wcaEvent, type: type, spec: spec });\n    }\n\n    state.toShow = toShow;\n    this.setState(state);\n  };\n\n  searchCompetitor = wcaId => {\n    if (isValidWcaId(wcaId)) {\n      this.fetchCompetitor(wcaId);\n    }\n  };\n\n  getCompetitorInfo = () => {\n    return this.state.competitorInfo;\n  };\n\n  isLoaded = () => {\n    return this.state.loaded;\n  };\n\n  // Search competitor info in the api\n  baseApiUrl = \"http://localhost:3000/\";\n  baseApiUrl = \"https://www.worldcubeassociation.org/\";\n  personsEndpoint = \"api/v0/persons/\";\n  fetchCompetitor = function(wcaId) {\n    wcaId = wcaId.toUpperCase();\n    let url = this.baseApiUrl + this.personsEndpoint + wcaId;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        result => {\n          let state = this.state;\n          state.competitorInfo = result;\n          state.loaded = true;\n          this.setState(state);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotrom\">\n          <h1 id=\"main-title\">Super Card Cuber</h1>\n        </div>\n        <br />\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Input\n                searchCompetitor={this.searchCompetitor}\n                isToShow={this.isToShow}\n                toogleToShow={this.toogleToShow}\n                generalItems={this.state.generalItems}\n                toogleShowGeneralItem={this.toogleShowGeneralItem}\n                types={this.types}\n                specs={this.specs}\n              />\n            </div>\n          </div>\n        </div>\n\n        <Card\n          getCompetitorInfo={this.getCompetitorInfo}\n          isLoaded={this.isLoaded}\n          competitorInfo={this.state.competitorInfo}\n          toShow={this.state.toShow}\n          generalItems={this.state.generalItems}\n          getSpecName={this.getSpecName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Interface;\n","import React from \"react\";\nimport \"./App.css\";\nimport Interface from \"./components/Interface\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Interface></Interface>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}